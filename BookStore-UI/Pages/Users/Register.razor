@page "/Register"

@using BookStore_UI.Models
@using BookStore_UI.Contracts

@inject IAuthenticationRepository _authRepo
@inject NavigationManager _navMan


<h3 class="card-title">Inregistrare</h3>

   @if (!response)
    {
      <div class=" alert alert-danger">
         <p> Atentiune inregistrare esuata!</p>
      </div>
    }
<div class="card-body">
    <EditForm Model="Model" OnValidSubmit="HandleRegistration">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label for="Nume">Nume user</label>
            <InputText Id="text" class="form-control" @bind-Value="Model.Name" />
            <ValidationMessage For="@(() => Model.Name)" />
        </div>
        <div class="form-group">
            <label for="password">Password</label>
            <InputText Id="password" type="password" class="form-control" @bind-Value="Model.Password" />
            <ValidationMessage For="@(() => Model.Password)" />
        </div>
        <div class="form-group">
            <label for="confirmpassword">Confirm Password</label>
            <InputText Id="confirmpassword" type="password" class="form-control" @bind-Value="Model.ConfirmPassword" />
            <ValidationMessage For="@(() => Model.ConfirmPassword)" />
        </div>
        <div class="form-group">
            <label for="Rol">Rol</label>
            <select @bind="Model.Rol" class="form-control" id="rol">
                <option value="">--Selectare autor--</option>
                
                        <option value="Administrator">administrator</option>
                        <option value="Customer">customer</option>
            </select>
        </div>
        <button type="submit" class="btn btn-primary btn-block">Register</button>

    </EditForm>
</div>


@code {
    private RegistrationModel Model = new RegistrationModel();
    bool response = true;

    private async Task HandleRegistration()
    {
        response = await _authRepo.Register(Model);

        if (response)
        {
            _navMan.NavigateTo("/");
        }
    }
}