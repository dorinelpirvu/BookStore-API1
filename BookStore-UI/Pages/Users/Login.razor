@page "/Login"

@using BookStore_UI.Models
@using BookStore_UI.Contracts

@inject IAuthenticationRepository _authRepo
@inject NavigationManager _navMan


<h3 class="card-title">Logare</h3>

@if (!response)
{
    <div class=" alert alert-danger">
        <p> Atentiune logare esuata!</p>
    </div>
}
<div class="card-body">
    <EditForm Model="Model" OnValidSubmit="HandleLogin">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label for="Nume">Nume user</label>
            <InputText Id="text" class="form-control" @bind-Value="Model.Name" />
            <ValidationMessage For="@(() => Model.Name)" />
        </div>
        <div class="form-group">
            <label for="password">Password</label>
            <InputText Id="password" type="password" class="form-control" @bind-Value="Model.Password" />
            <ValidationMessage For="@(() => Model.Password)" />
        </div>
        
        <button type="submit" class="btn btn-primary btn-block">Login</button>

    </EditForm>
</div>

@code {
    private LoginModel Model = new LoginModel();
    bool response = true;

    private async Task HandleLogin()
    {
        response = await _authRepo.Login(Model);

        if (response)
        {
            _navMan.NavigateTo("/");
        }
    }
}
