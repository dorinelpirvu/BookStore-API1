@page "/authors/create/"
@attribute [Authorize(Roles = "Administrator")]
@inject IAuthorRepository _repo
@inject NavigationManager _navManager

<h3>Create</h3>

@if (!isSucces)
{
    <LoadingMessage Mesaj="Eroare..." />
}
<EditForm Model="Model" OnValidSubmit="CreateAuthor">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="firstname">First Name</label>
        <InputText @bind-Value="Model.FirstName" class="form-control" id="firstname" />
    </div>
    <div class="form-group">
        <label for="lastname">Last Name</label>
        <InputText @bind-Value="Model.LastName" class="form-control" id="lastname" />
    </div>
    <div class="form-group">
        <label for="bio">Biography</label>
        <InputTextArea @bind-Value="Model.Bio" class="form-control" id="bio" />
    </div>
    <button class="btn btn-primary" type="submit">
        <span class="oi oi-pencil"></span>
        Adaugare 
    </button>
    <button @onclick="BackToList" class="btn btn-outline-secondary">
        <span class="oi oi-media-skip-backward"></span>
        Back To List
    </button>
</EditForm>



@code {

    private Author Model = new Author();
    bool isSucces = true;

    private async Task CreateAuthor()
    {
        isSucces = await _repo.Create(EndPoints.AuthorsEndPoint, Model);
        BackToList();
    }

    private void BackToList()
    {
        _navManager.NavigateTo("/authors/");
    }
}
