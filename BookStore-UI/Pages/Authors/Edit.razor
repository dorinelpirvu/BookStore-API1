@page "/authors/edit/{Id}"
@attribute [Authorize(Roles = "Administrator")]
@inject IAuthorRepository _repo
@inject NavigationManager _navManager

<h3 class="card-title">Edit Author</h3>
<hr />
<br />
@if (!isSuccess)
{
    <LoadingMessage Mesaj="Eroare..." />
    //<ErrorMessage Message="Somewthing Went Wrong With the Operation" />
}

@if (int.Parse(Id) < 1 || string.IsNullOrWhiteSpace(Id))
{

    <LoadingMessage Mesaj="Incearca din nou..." />
    //<ErrorMessage Message="Invalid Selection. Please Try Again" />
}
else if (Model == null)
{
    <LoadingMessage Mesaj="Loading Author For Edit" />
}
else
{
    <EditForm Model="Model" OnValidSubmit="EditAuthor">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label for="firstname">First Name</label>
            <InputText @bind-Value="Model.FirstName" class="form-control" id="firstname" />
        </div>
        <div class="form-group">
            <label for="lastname">Last Name</label>
            <InputText @bind-Value="Model.LastName" class="form-control" id="lastname" />
        </div>
        <div class="form-group">
            <label for="bio">Biography</label>
            <InputTextArea @bind-Value="Model.Bio" class="form-control" id="bio" />
        </div>
        <button class="btn btn-primary" type="submit">
            <span class="oi oi-pencil"></span>
            Submit Changes
        </button>
        <button @onclick="BackToList" class="btn btn-outline-secondary">
            <span class="oi oi-media-skip-backward"></span>
            Back To List
        </button>
    </EditForm>
}


@code {
    [Parameter]
    public string Id { get; set; }

    private Author Model = new Author();
    private bool isSuccess = true;
    protected override async Task OnInitializedAsync()
    {
        int id = Convert.ToInt32(Id);
        Model = await _repo.Get(EndPoints.AuthorsEndPoint, id);
    }

    private async Task EditAuthor()
    {
        isSuccess = await _repo.Update(EndPoints.AuthorsEndPoint, Model, Model.Id);
        if (isSuccess)
        {
            
            //_toastService.ShowWarning("Author Updated Successfully", "");
            BackToList();
        }

    }

    private void BackToList()
    {
        _navManager.NavigateTo("/authors/");
    }
}