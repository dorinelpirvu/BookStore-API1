@page "/authors/"


@inject NavigationManager _navManager
@inject IAuthorRepository _authorRepo


@if (Model == null)
{
    <LoadingMessage Mesaj="Asteptati se incarca..." />
}
else
{
    <a href="Authors/create" class="btn btn-outline-warning">
        <span class="oi-plus"></span>
    </a>
    <table class=" table table-responsive">
        <thead>
            <tr>
                <th>First name</th>
                <th>second name</th>
                <th>Actiune</th>
            </tr>
        </thead>

        <tbody>
            @foreach (var author in Model)
            {
                <tr>
                    <td>@author.FirstName </td>
                    <td>@author.LastName</td>

                    <a href="Authors/view/@author.Id" class="btn btn-primary">
                        <span class="oi-book"></span>
                    </a>
                    <a href="Authors/edit/@author.Id" class="btn btn-outline-secondary">
                        <span class="oi-pencil"></span>
                    </a>
                    <a href="Authors/delete/@author.Id" class="btn btn-outline-warning">
                        <span class="oi-delete"></span>
                    </a>
                </tr>

            }

        </tbody>

    </table>
}

@code {
    private IList<Author> Model;
    protected override async Task OnInitializedAsync()
    {
        Model = await _authorRepo.Get(EndPoints.AuthorsEndPoint);
    }

}
